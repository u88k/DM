from sklearn.datasets import load_iris
import pandas as pd
import numpy as np
from sklearn import metrics
from sklearn.metrics import confusion_matrix, accuracy_score, confusion_matrix,ConfusionMatrixDisplay


iris=load_iris()
x=pd.DataFrame(iris.data, columns=iris.feature_names)
y=pd.DataFrame(iris.target)

x.head()

from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()
normalized_df=pd.DataFrame(scaler.fit_transform(x),columns=iris.feature_names)
normalized_df.head()

from sklearn.model_selection import train_test_split, KFold , cross_val_score

xtrain, xtest ,ytrain, ytest = train_test_split(x,y,test_size=0.33,random_state= 42)

from sklearn.naive_bayes import GaussianNB


nbayes = GaussianNB()
nbayes.fit(x_train,y_train)
nb_prediction = nbayes.predict(x_test)

nb_matrix = confusion_matrix(y_test,nb_prediction)
nb_cmatrix = ConfusionMatrixDisplay(confusion_matrix = nb_matrix)
nb_cmatrix.plot()
plt.title("Naive Bayes classification")
plt.show()


nb_acc = accuracy_score(y_test,nb_prediction)
print("Accuracy using KNN classifier :",nb_acc)

print(classification_report(y_test,nb_prediction))
















