from sklearn.datasets import load_iris
import pandas as pd
import numpy as np


iris=load_iris()
x=pd.DataFrame(iris.data, columns=iris.feature_names)
y=pd.DataFrame(iris.target)

x.head()

from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()
normalized_df=pd.DataFrame(scaler.fit_transform(x),columns=iris.feature_names)
normalized_df.head()

from sklearn.model_selection import train_test_split, KFold , cross_val_score

xtrain, xtest ,ytrain, ytest = train_test_split(x,y,test_size=0.33,random_state= 42)



from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier()
knn.fit(x_train,y_train)
knn_prediction = knn.predict(x_test)

knn_matrix = confusion_matrix(y_test,knn_prediction)
knn_cmatrix = ConfusionMatrixDisplay(confusion_matrix = knn_matrix)
knn_cmatrix.plot()
plt.title("KNN classification")
plt.show()


knn_acc = accuracy_score(y_test,knn_prediction)
print("Accuracy using KNN classifier :",knn_acc)


print(classification_report(y_test,knn_prediction))
















